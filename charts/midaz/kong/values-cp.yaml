# Do not use Kong Ingress Controller
ingressController:
 enabled: false
  
image:
 repository: kong/kong-gateway
 tag: "3.9.0.0"
  
# Mount the secret created earlier
secretVolumes:
 - kong-cluster-cert
  
env:
 # This is a control_plane node
 role: control_plane
 # These certificates are used for control plane / data plane communication
 cluster_cert: /etc/secrets/kong-cluster-cert/tls.crt
 cluster_cert_key: /etc/secrets/kong-cluster-cert/tls.key
  
 # Database
 # CHANGE THESE VALUES
 database: postgres
 pg_database: kong
 pg_user: kong
 pg_password: demo123
 pg_host: kong-cp-postgresql.midaz-open-source.svc.cluster.local
 pg_ssl: "on"
  
 # Kong Manager password
 password: kong_admin_password
 admin_gui_url: http://kong.private.gen-int-dev.midaz.io
 admin_gui_api_url: http://kong-admin.private.gen-int-dev.midaz.io
 # Change the secret and set cookie_secure to true if using a HTTPS endpoint
 admin_gui_session_conf: '{"secret":"secret","storage":"kong","cookie_secure":false}'
  
# Enterprise functionality
enterprise:
 enabled: false
 license_secret: kong-enterprise-license
  
# The control plane serves the Admin API
admin:
  enabled: true
  http:
   enabled: true
  tls:
    enabled: false
  ingress:
    enabled: true
    hostname: admin.private.gen-int-dev.midaz.io
    path: /
    pathType: Prefix
    ingressClassName: alb
    annnotation:
      alb.ingress.kubernetes.io/load-balancer-name: kong-alb-private
      alb.ingress.kubernetes.io/group.name: demo.kong-alb-private
      alb.ingress.kubernetes.io/target-type: instance
      alb.ingress.kubernetes.io/scheme: internal
      alb.ingress.kubernetes.io/healthcheck-path: /
      alb.ingress.kubernetes.io/listen-ports: '[{"HTTP": 80}]'
  
# Clustering endpoints are required in hybrid mode
cluster:
 enabled: true
 tls:
   enabled: true
  
clustertelemetry:
 enabled: true
 tls:
   enabled: true
  
# Optional features
manager:
  enabled: true
  http: 
    enabled: true 
  tls:
    enabled: false
  ingress:
    enabled: true
    hostname: kong.private.gen-int-dev.midaz.io
    path: /
    pathType: Prefix
    ingressClassName: alb
    annnotation:
      alb.ingress.kubernetes.io/load-balancer-name: kong-alb-private
      alb.ingress.kubernetes.io/group.name: demo.kong-alb-private
      alb.ingress.kubernetes.io/target-type: instance
      alb.ingress.kubernetes.io/scheme: internal
      alb.ingress.kubernetes.io/healthcheck-path: /
      alb.ingress.kubernetes.io/listen-ports: '[{"HTTP": 80}]'

# These roles will be served by different Helm releases
proxy:
 enabled: false

postgresql:
  enabled: true
  auth:
    password: demo123