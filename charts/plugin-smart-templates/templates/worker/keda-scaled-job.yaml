# Nenhuma verificação de API aqui
apiVersion: keda.sh/v1alpha1
kind: ScaledJob
metadata:
  name: {{ include "plugin-worker.fullname" . }}
  labels:
    {{- include "plugin-worker.labels" (dict "context" . "name" .Values.worker.name ) | nindent 4 }}
    app.kubernetes.io/component: worker
    app.kubernetes.io/part-of: plugin-smart-templates
  annotations:
    "helm.sh/resource-policy": keep
    "helm.sh/hook": "post-install,post-upgrade"
    "helm.sh/hook-weight": "5"
    {{- with .Values.worker.annotations }}
    {{- range $key, $value := . }}
    {{ $key }}: {{ $value | quote }}
    {{- end }}
    {{- end }}
spec:
  jobTargetRef:
    backoffLimit: {{ .Values.worker.keda.scaledJob.backoffLimit }}
    ttlSecondsAfterFinished: {{ .Values.worker.keda.scaledJob.ttlSecondsAfterFinished }}
    activeDeadlineSeconds: {{ .Values.worker.keda.scaledJob.activeDeadlineSeconds | default 300 }}
    template:
      spec:
        {{- with .Values.worker.imagePullSecrets }}
        imagePullSecrets:
          {{- toYaml . | nindent 10 }}
        {{- end }}
        containers:
        - name: {{ include "plugin-worker.fullname" . }}
          image: "{{ .Values.worker.image.repository }}:{{ .Values.worker.image.tag }}"
          imagePullPolicy: {{ .Values.worker.image.pullPolicy }}
          envFrom:
            - configMapRef:
                name: {{ include "plugin-worker.fullname" . }}
            - secretRef:
                name: {{ if .Values.worker.useExistingSecret }}{{ .Values.worker.existingSecretName }}{{ else }}{{ include "plugin-worker.fullname" . }}{{ end }}
          resources:
            limits:
              cpu: {{ .Values.worker.resources.limits.cpu }}
              memory: {{ .Values.worker.resources.limits.memory }}
            requests:
              cpu: {{ .Values.worker.resources.requests.cpu }}
              memory: {{ .Values.worker.resources.requests.memory }}
        restartPolicy: Never
        {{- with .Values.worker.nodeSelector }}
        nodeSelector:
          {{- toYaml . | nindent 10 }}
        {{- end }}
        {{- with .Values.worker.affinity }}
        affinity:
          {{- toYaml . | nindent 10 }}
        {{- end }}
        {{- with .Values.worker.tolerations }}
        tolerations:
          {{- toYaml . | nindent 10 }}
        {{- end }}        
  pollingInterval: {{ .Values.worker.keda.scaledJob.pollingInterval }}
  successfulJobsHistoryLimit: {{ .Values.worker.keda.scaledJob.successfulJobsHistoryLimit }}
  failedJobsHistoryLimit: {{ .Values.worker.keda.scaledJob.failedJobsHistoryLimit }}
  maxReplicaCount: {{ .Values.worker.keda.scaledJob.maxReplicaCount }}        
  triggers:
  {{- range .Values.worker.keda.scaledJob.triggers }}
  - type: {{ .type }}
    metadata:
      queueName: {{ $.Values.common.configmap.RABBITMQ_GENERATE_REPORT_QUEUE | quote }}
      host: "amqp://{{ $.Values.common.configmap.RABBITMQ_HOST }}:{{ $.Values.common.configmap.RABBITMQ_PORT_AMQP }}"
      queueLength: {{ .metadata.queueLength | quote }}
      protocol: {{ .metadata.protocol | quote }}
      vhost: {{ .metadata.vhost }}
    authenticationRef:
      name: keda-trigger-authentication
  {{- end }}