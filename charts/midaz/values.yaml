
# Default values for midaz components.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.
nameOverride: "midaz"
fullnameOverride: ""
namespaceOverride: "midaz"

console:
  # -- Service name
  name: console

  # -- Number of replicas for the deployment
  replicaCount: 1

  image:
    # -- Repository for the console service container image
    repository: lerianstudio/midaz-console
    # -- Image pull policy
    pullPolicy: IfNotPresent
    # -- Image tag used for deployment
    tag: "1.22.0"

  # -- Secrets for pulling images from a private registry
  imagePullSecrets: []

  # -- Overrides the default generated name by Helm
  nameOverride: ""
  # -- Overrides the full name generated by Helm
  fullnameOverride: ""

  # -- Annotations to be added to the Pod
  podAnnotations: {}

  podSecurityContext: {}
  # fsGroup: 2000

  securityContext:
    # -- Defines the group ID for the user running the process inside the container
    runAsGroup: 1000
    # -- Defines the user ID for the process running inside the container
    runAsUser: 1000
    # -- Ensures the process does not run as root
    runAsNonRoot: true
    capabilities:
      drop:
        - ALL
    # -- Defines the root filesystem as read-only
    readOnlyRootFilesystem: true

  service:
    # -- Kubernetes service type
    type: ClusterIP
    # -- Service port
    port: 8081

  ingress:
    # -- Enable or disable ingress
    enabled: false
    # -- Ingress class name
    className: ""
    # -- Additional ingress annotations
    annotations: {}
    hosts:
      - host: ""
        paths:
          - path: /
            pathType: Prefix
    # -- TLS configuration for ingress
    tls: []
    #  - secretName: chart-example-tls
    #  hosts:
    #      - chart-example.local
      
  resources:
    # -- CPU and memory limits for pods
    limits:
      cpu: 200m
      memory: 256Mi
    # -- Minimum CPU and memory requests
    requests:
      cpu: 100m
      memory: 128Mi

  autoscaling:
    # -- Enable or disable horizontal pod autoscaling
    enabled: true
    # -- Minimum number of replicas
    minReplicas: 1
    # -- Maximum number of replicas
    maxReplicas: 3
    # -- Target CPU utilization percentage for autoscaling
    targetCPUUtilizationPercentage: 80
    targetMemoryUtilizationPercentage: 80

  # -- Node selector for scheduling pods on specific nodes
  nodeSelector: {}

   # -- Tolerations for scheduling on tainted nodes
  tolerations: {}

  # -- Affinity rules for pod scheduling
  affinity: {}
    # nodeAffinity:
    #   requiredDuringSchedulingIgnoredDuringExecution:
    #     nodeSelectorTerms:
    #     - matchExpressions:
    #       - key: midaz.io/owner
    #         operator: In
    #         values:
    #         - midaz

   # -- ConfigMap for environment variables and configurations
   # @default -- templates/console/configmap.yaml
  configmap:
    # -- URL of the NextAuth service
    NEXTAUTH_URL: "http://localhost:8081" # If a custom DNS is configured for the console, this value must be updated accordingly.

  # -- Secrets for storing sensitive data
  # @default -- templates/console/secrets.yaml
  secrets: {}

  serviceAccount:
    # -- Specifies whether a ServiceAccount should be created
    create: true
    # -- Annotations for the ServiceAccount
    annotations: {}
    # -- Name of the service account
    # @default -- `midaz-console.fullname`
    name: ""

onboarding:
  # -- Service name
  name: onboarding

  # -- Number of replicas for the onboarding service
  replicaCount: 2

  image:
    # -- Repository for the onboarding service container image
    repository: lerianstudio/midaz-onboarding
    # -- Image pull policy
    pullPolicy: IfNotPresent
    # -- Image tag used for deployment
    tag: "1.50.0"

  # -- Secrets for pulling images from a private registry
  imagePullSecrets: []

  # -- Overrides the default generated name by Helm
  nameOverride: ""
  # -- Overrides the full name generated by Helm
  fullnameOverride: ""

  # -- Pod annotations for additional metadata
  podAnnotations: {}

  podSecurityContext: {}
    # fsGroup: 2000

  securityContext:
    # -- Defines the group ID for the user running the process inside the container
    runAsGroup: 1000
    # -- Defines the user ID for the process running inside the container
    runAsUser: 1000
    # -- Ensures the process does not run as root
    runAsNonRoot: true
    capabilities:
      drop:
        - ALL
    # -- Defines the root filesystem as read-only
    readOnlyRootFilesystem: true

  service:
    # -- Kubernetes service type
    type: ClusterIP
    # -- Port for the HTTP API
    port: 3000

  ingress:
    # -- Enable or disable ingress
    enabled: false
    # -- Ingress class name
    className: ""
    # -- Additional ingress annotations
    annotations: {}
    hosts:
      - host: ""
        paths:
          - path: /
            pathType: Prefix
    # -- TLS configuration for ingress
    tls: []
    #  - secretName: chart-example-tls
    #  hosts:
    #      - chart-example.local

  resources:
    # -- CPU and memory limits for pods
    limits:
      cpu: 1500m
      memory: 512Gi
    # -- Minimum CPU and memory requests
    requests:
      cpu: 768m
      memory: 256Mi

  autoscaling:
    # -- Enable or disable horizontal pod autoscaling
    enabled: true
    # -- Minimum number of replicas
    minReplicas: 2
    # -- Maximum number of replicas
    maxReplicas: 5
    # -- Target CPU utilization percentage for autoscaling
    targetCPUUtilizationPercentage: 80
    targetMemoryUtilizationPercentage: 80

  # -- Node selector for scheduling pods on specific nodes
  nodeSelector: {}

  # -- Tolerations for scheduling on tainted nodes
  tolerations: {}

  # -- Affinity rules for pod scheduling
  affinity: {}
    # -- Node affinity rules
    # nodeAffinity:
    #   requiredDuringSchedulingIgnoredDuringExecution:
    #     nodeSelectorTerms:
    #     - matchExpressions:
    #       - key: midaz.io/owner
    #         operator: In
    #         values:
    #         - midaz

  # -- ConfigMap for environment variables and configurations
  # @default -- templates/onboarding/configmap.yaml
  configmap: {}

  # -- Secrets for storing sensitive data
  # @default -- templates/onboarding/secrets.yaml
  secrets: {}

  serviceAccount:
    # -- Specifies whether a ServiceAccount should be created
    create: true
    # -- Annotations for the ServiceAccount
    annotations: {}
    # -- Name of the service account
    # @default -- `midaz-onboarding.fullname`
    name: ""

transaction:
  # -- Service name
  name: transaction

  # -- Number of replicas for the transaction service
  replicaCount: 1

  image:
    # -- Repository for the transaction service container image
    repository: lerianstudio/midaz-transaction
    # -- Image pull policy
    pullPolicy: IfNotPresent
    # -- Image tag used for deployment
    tag: "1.50.0"

  # -- Secrets for pulling images from a private registry
  imagePullSecrets: []

  # -- Overrides the default generated name by Helm
  nameOverride: ""
  # -- Overrides the full name generated by Helm
  fullnameOverride: ""

  # -- Pod annotations for additional metadata
  podAnnotations: {}

  podSecurityContext: {}
  # fsGroup: 2000

  securityContext:
    # -- Defines the group ID for the user running the process inside the container
    runAsGroup: 1000
    # -- Defines the user ID for the process running inside the container
    runAsUser: 1000
    # -- Ensures the process does not run as root
    runAsNonRoot: true
    capabilities:
      drop:
        - ALL
    # -- Defines the root filesystem as read-only
    readOnlyRootFilesystem: true

  service:
    # -- Kubernetes service type
    type: ClusterIP
    # -- Port for the HTTP API
    port: 3001

  ingress:
    # -- Enable or disable ingress
    enabled: false
    # -- Ingress class name
    className: ""
    # -- Additional ingress annotations
    annotations: {}
    hosts:
      - host: ""
        paths:
          - path: /
            pathType: Prefix
    # -- TLS configuration for ingress
    tls: []
    #  - secretName: chart-example-tls
    #  hosts:
    #      - chart-example.local

  resources:
    # -- CPU and memory limits for pods
    limits:
      cpu: 2000m
      memory: 512Gi
    # -- Minimum CPU and memory requests
    requests:
      cpu: 768m
      memory: 256Mi

  autoscaling:
    # -- Enable or disable horizontal pod autoscaling
    enabled: true
    # -- Minimum number of replicas
    minReplicas: 3
    # -- Maximum number of replicas
    maxReplicas: 9
    # -- Target CPU utilization percentage for autoscaling
    targetCPUUtilizationPercentage: 70
    targetMemoryUtilizationPercentage: 80

  # -- Node selector for scheduling pods on specific nodes
  nodeSelector: {}

  # -- Tolerations for scheduling on tainted nodes
  tolerations: {}

  # -- Affinity rules for pod scheduling
  affinity: {}
    # -- Node affinity rules
    # nodeAffinity:
    #   requiredDuringSchedulingIgnoredDuringExecution:
    #     nodeSelectorTerms:
    #     - matchExpressions:
    #       - key: midaz.io/owner
    #         operator: In
    #         values:
    #         - midaz

  # -- ConfigMap for environment variables and configurations
  # @default -- templates/transaction/configmap.yaml
  configmap: {}

  # -- Secrets for storing sensitive data
  # @default -- templates/transaction/secrets.yaml
  secrets: {}

  serviceAccount:
    # -- Specifies whether a ServiceAccount should be created
    create: true
    # -- Annotations for the ServiceAccount
    annotations: {}
    # -- Name of the service account
    # @default -- `midaz-transaction.fullname`
    name: ""

grafana:
  # OpenTelemetry (OTel) dependency for observability.
  # This component is responsible for collecting and exporting telemetry data
  # such as traces and metrics, enhancing the monitoring of the application.
  # For more details, refer to the documentation:
  # https://docs.lerian.studio/docs/observability-in-midaz#midaz-observability-stack
  enabled: false

  name: grafana

  # -- Configure the ingress for Access Grafana Dashboard
  ingress:
    enabled: false
    className: ""
    annotations: {}
    hosts:
      - host: ""
        paths:
          - path: /
            pathType: Prefix
    tls: []
    #  - secretName: chart-example-tls
    #  hosts:
    #      - chart-example.local
  
redis:
  # Redis is used to handle scenarios where real-time performance and fast data retrieval are essential.
  # This component is responsible for providing an in-memory data store
  # For more details, refer to the documentation:
  # https://docs.lerian.studio/docs/midaz-components#why-redis
  enabled: true

  external: false
  architecture: standalone
  auth:
    enabled: false
  master:
    persistence:
      size: 8Gi

    resourcesPreset: "large"

postgresql:
  # PostgreSQL is the backbone of Midaz for managing structured data that demands transactional reliability and consistency.
  # This component is responsible for providing a robust relational database
  # For more details, refer to the documentation:
  # https://docs.lerian.studio/docs/midaz-components#why-postgresql
  enabled: true

  external: false
  architecture: replication
  replication:
    numSynchronousReplicas: 1
  auth:
    enabled: true
    enablePostgresUser: false
    username: "midaz"
    password: "lerian"
    database: "onboarding"
    replicationUsername: "replicator"
    replicationPassword: "replicator_password"

  primary:
    extraVolumes:
    - name: init-script
      configMap:
        name: midaz-init-sql
        items:
          - key: init.sql
            path: init.sql
    extraVolumeMounts:
    - name: init-script
      mountPath: /docker-entrypoint-initdb.d/init.sql
      subPath: init.sql
    
    persistence:
      size: 8Gi
    
    resourcesPreset: large

    extendedConfiguration: |
      shared_buffers = 2GB
      max_wal_senders = 10

    extraEnvVars:
      - name: POSTGRESQL_MAX_CONNECTIONS
        value: "500"
      - name: POSTGRESQL_TCP_KEEPALIVES_IDLE
        value: "30"
      - name: POSTGRESQL_TCP_KEEPALIVES_INTERVAL
        value: "10"
      - name: POSTGRESQL_TCP_KEEPALIVES_COUNT
        value: "5"    
      - name: POSTGRESQL_MAX_REPLICATION_SLOTS
        value: "10"

  readReplicas:
    name: replication
    replicaCount: 1
    persistence:
      size: 8Gi
  
    resourcesPreset: large

    extendedConfiguration: |
      shared_buffers = 2GB
    
    extraEnvVars:
      - name: POSTGRESQL_MAX_CONNECTIONS
        value: "500"
      - name: POSTGRESQL_TCP_KEEPALIVES_IDLE
        value: "40"
      - name: POSTGRESQL_TCP_KEEPALIVES_INTERVAL
        value: "10"
      - name: POSTGRESQL_TCP_KEEPALIVES_COUNT
        value: "5"    
      - name: POSTGRESQL_MAX_REPLICATION_SLOTS
        value: "10"

mongodb:
  # MongoDB’s flexibility and scalability make it the perfect choice for managing evolving and less structured data.
  # For more details, refer to the documentation:
  # https://docs.lerian.studio/docs/midaz-components#why-mongodb
  enabled: true

  external: false
  auth:
    enabled: true
    rootUser: midaz
    rootPassword: "lerian"
  persistence:
    size: 8Gi

rabbitmq:
  # RabbitMQ dependency for message brokering.
  # This component is responsible for providing a message queue system
  # to enable communication between different parts of the application.
  enabled: true

  external: false
  image:
    debug: true
  auth:
    enabled: true
    username: "midaz"
    password: "lerian"
  loadDefinition:
    enabled: true
    existingSecret: load-definition
  extraConfiguration: |
    load_definitions = /app/load_definition.json
  
  persistence:
    size: 8Gi

  resourcesPreset: "medium"
  
  persistence:
    size: 8Gi
