# Default values for midaz-ledger.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 2

image:
  repository: lerianstudio/midaz-ledger
  pullPolicy: IfNotPresent
  # Overrides the image tag whose default is the chart appVersion.
  tag: "latest"

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations: {}

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

service:
  type: ClusterIP
  port: 80

ingress:
  enabled: false
  className: ""
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: chart-example.local
      paths:
        - path: /
          pathType: ImplementationSpecific
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

resources:
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  limits:
    cpu: 200m
    memory: 256Mi
  requests:
    cpu: 100m
    memory: 128Mi

autoscaling:
  enabled: true
  minReplicas: 1
  maxReplicas: 3
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

nodeSelector: {}

tolerations:
  - key: "midaz.io/midaz"
    operator: "Equal"
    effect: "NoSchedule"

affinity: {}
  # nodeAffinity:
  #   requiredDuringSchedulingIgnoredDuringExecution:
  #     nodeSelectorTerms:
  #     - matchExpressions:
  #       - key: midaz.io/owner
  #         operator: In
  #         values:
  #         - midaz

karpenter:
  enabled: true
  instance_types: ["c7a.large", "m7a.large", "c7a.xlarge", "m7a.xlarge"]
  cluster:
    name: "midaz-eks-control-plane-dev"
    iam_role_name: "midaz-eks-control-plane-dev"

configmap: {}

secrets: {}

redis:
  external: false
  architecture: standalone
  auth:
    enabled: false

postgresql:
  external: false
  auth:
    enablePostgresUser: false
    username: "midaz"
    password: "lerian"
    database: "ledger"
    replicationUsername: replicator
    replicationPassword: "lerian"

mongodb:
  external: false
  auth:
    enabled: true
    username: midaz
    password: lerian
    database: ledger

# externalRedis:
#   enabled: false
#   architecture: standalone
#   auth:
#     enabled: false

# externalPostgresql:
#   enabled: false
#   global:
#     postgresql:
#       postgresqlPassword: mypassword

# externalMongodb:
#   enabled: false
#   auth:
#     enabled: true
#     rootPassword: rootpassword
#     username: myuser
#     password: mypassword
#     database: mydatabase