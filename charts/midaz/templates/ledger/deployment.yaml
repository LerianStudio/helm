apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "midaz-ledger.fullname" . }}
  labels:
    {{- include "midaz.labels" (dict "context" . "component" .Values.ledger.name "name" .Values.ledger.name ) | nindent 4 }}
spec:
  {{- if not .Values.ledger.autoscaling.enabled }}
  replicas: {{ .Values.ledger.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "midaz.selectorLabels" (dict "context" . "name" .Values.ledger.name ) | nindent 6 }}
  template:
    metadata:
      {{- with .Values.ledger.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "midaz.labels" (dict "context" . "component" .Values.ledger.name "name" .Values.ledger.name ) | nindent 8 }}
    spec:
      {{- with .Values.ledger.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ .Values.ledger.serviceAccount.name }}
      securityContext:
        {{- toYaml .Values.ledger.podSecurityContext | nindent 8 }}
      initContainers:
        - name: wait-for-dependencies
          image: busybox
          envFrom:
          - configMapRef:
              name: {{ include "midaz-ledger.fullname" . }}
          command:
            - /bin/sh
            - -c
            - >
              for svc in "$DB_HOST:$DB_PORT" "$DB_REPLICA_HOST:$DB_REPLICA_PORT" "$RABBITMQ_HOST:$RABBITMQ_PORT_HOST" "$MONGO_HOST:$MONGO_PORT" "$REDIS_HOST:$REDIS_PORT";
              do
                echo "Checking $svc...";
                while ! nc -z $(echo $svc | cut -d: -f1) $(echo $svc | cut -d: -f2); do
                  echo "$svc is not ready yet, waiting...";
                  sleep 5;
                done;
                echo "$svc is ready!";
              done; 
      containers:
        - name: {{ include "midaz-ledger.fullname" . }}
          securityContext:
            {{- toYaml .Values.ledger.securityContext | nindent 12 }}
          image: "{{ .Values.ledger.image.repository }}:{{ .Values.ledger.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.ledger.image.pullPolicy }}
          envFrom:
          - secretRef:
              name: {{ include "midaz-ledger.fullname" . }}
          - configMapRef:
              name: {{ include "midaz-ledger.fullname" . }}
          ports:
            - name: http
              containerPort: 3000
              protocol: TCP
            - name: grpc
              containerPort: 3001
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /health
              port: http
          readinessProbe:
            httpGet:
              path: /health
              port: http
          resources:
            {{- toYaml .Values.ledger.resources | nindent 12 }}
      {{- with .Values.ledger.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.ledger.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.ledger.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}