plugins:
  [
    [
      "@semantic-release/commit-analyzer",
      {
        "preset": "conventionalcommits",
        "parserOpts":
          { "noteKeywords": ["BREAKING CHANGE", "BREAKING CHANGES"] },
        "releaseRules":
          [
            { "type": "feat", "release": "minor" },
            { "type": "perf", "release": "minor" },
            { "type": "build", "release": "minor" },
            { "type": "chore", "release": "patch" },
            { "type": "ci", "release": "patch" },
            { "type": "test", "release": "patch" },
            { "type": "fix", "release": "minor" },
            { "type": "refactor", "release": "minor" },
            { "type": "docs", "release": "patch" },
            { "breaking": true, "release": "major" }
          ]
      }
    ],
    [
      "@semantic-release/release-notes-generator",
      {
        "preset": "conventionalcommits",
        "parserOpts": {
          "noteKeywords": ["BREAKING CHANGE", "BREAKING CHANGES", "BREAKING"]
        },
        "writerOpts": {
          "commitsSort": ["subject", "scope"]
        }
      }
    ],
    [
      "semantic-release-helm3",
      {
        crPublish: true,
        onlyUpdateVersion: true,
        chartPath: './chart',
        crConfigPath: '.github/configs/cr.yaml',
        registry: 'oci://ghcr.io/lerianstudio/midaz-helm'
      }
    ],
    [
      "@qiwi/semantic-release-gh-pages-plugin",
      {
        "msg": "chore(release): ${nextRelease.version} [skip ci]\n\n${nextRelease.notes}",
        "src": "/home/runner/work/midaz-helm/midaz-helm/*.tgz",
        "dst": ".",
        "branch": "gh-pages"
      }
    ],
    [
      "@semantic-release/changelog",
      {
        "changelogFile": "CHANGELOG.md"
      }
    ],
    [
      "@semantic-release/git",
      {
        "message": "chore(release): ${nextRelease.version}\n\n${nextRelease.notes}",
        "assets": ["CHANGELOG.md", "index.yaml", "chart/Chart.yaml", "chart/index.yaml"]
      }
    ],
    [
      "@semantic-release/github"
    ],
    [
      "@saithodev/semantic-release-backmerge",
      {
        "backmergeBranches": [{"from": "main", "to": "develop"}],
        "message": "chore(release): Preparations for next release [skip ci]"
      }
    ]
  ]

branches:
  - main
  - name: develop
    prerelease: "beta"
  - name: hotfix/**
    prerelease: "hf"
