name: Helm Release

on:
  push:
    branches:
      - main
      - develop
    paths-ignore:
      - 'README.md'
      - '.github/workflows/**'
      - '.github/configs/**'
      - '.gitignore'

permissions:
  contents: write
  packages: write
  id-token: write

jobs:
  get-changed-paths:
    name: Get Changed Paths
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.changed-paths.outputs.matrix }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Get changed paths
        id: changed-paths
        uses: LerianStudio/github-actions-changed-paths@main
        with:
          filter_paths: charts/
          get_app_name: true
          path_level: 2
    
  release-helm-chart:
    needs: get-changed-paths
    name: Release Helm Chart
    if: needs.get-changed-paths.outputs.matrix != '[]'
    runs-on: ubuntu-latest
    strategy:
      max-parallel: 1
      matrix:
        chart: ${{ fromJson(needs.get-changed-paths.outputs.matrix) }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
      
      - name: Update Last Changes
        run: git pull origin ${{ github.ref_name }}

      - name: Set up Helm
        uses: azure/setup-helm@v3

      - name: Helm Lint
        run: helm lint ${{ matrix.chart.working_dir }}

      - name: Run helm unittest
        id: unittest
        run: |
          helm plugin install https://github.com/helm-unittest/helm-unittest.git
          helm unittest ${{ matrix.chart.working_dir }}
      
      - name: Helm Dependency Update
        run: helm dependency update ${{ matrix.chart.working_dir }}

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Login to GitHub Container Registry
        run: echo "${{ secrets.GITHUB_TOKEN }}" | helm registry login ghcr.io -u lerianstudio --password-stdin

      - name: Generate GitHub App Token
        id: app-token
        uses: actions/create-github-app-token@v1
        with:
          app-id: ${{ secrets.LERIAN_STUDIO_MIDAZ_PUSH_BOT_APP_ID }}
          private-key: ${{ secrets.LERIAN_STUDIO_MIDAZ_PUSH_BOT_PRIVATE_KEY }}
      
      - name: Import GPG key
        uses: crazy-max/ghaction-import-gpg@v6
        id: import_gpg
        with:
          gpg_private_key: ${{ secrets.LERIAN_CI_CD_USER_GPG_KEY }}
          passphrase: ${{ secrets.LERIAN_CI_CD_USER_GPG_KEY_PASSWORD }}
          git_committer_name: ${{ secrets.LERIAN_CI_CD_USER_NAME }}
          git_committer_email: ${{ secrets.LERIAN_CI_CD_USER_EMAIL }}
          git_config_global: true
          git_user_signingkey: true
          git_commit_gpgsign: true

      - name: Generate .releaserc file
        run: |
          CHART_NAME="${{ matrix.chart.name }}"
          CHART_PATH="${{ matrix.chart.working_dir }}"  
      
          jq \
            --arg chartPath "$CHART_PATH" \
            --arg tagFormat "$CHART_NAME-v\${version}" \
            --arg changelogPath "$CHART_PATH/CHANGELOG.md" \
            --arg successCmd "helm package $CHART_PATH && helm push $CHART_NAME-\${nextRelease.version}.tgz oci://ghcr.io/lerianstudio" \
            '.plugins[2][1].chartPath = $chartPath |
              .plugins[3][1].changelogFile = $changelogPath |
              .plugins[4][1].assets[0] = $changelogPath |
              .plugins[4][1].assets[1] = ($chartPath + "/Chart.yaml") |
              .tagFormat = $tagFormat |
              .plugins[5][1].successCmd = $successCmd' \
            .github/configs/.releaserc.json > .releaserc

      - name: Semantic Release
        uses: cycjimmy/semantic-release-action@v4
        id: semantic_changelog
        with:
          ci: false
          semantic_version: 23.0.8
          extra_plugins: |
            conventional-changelog-conventionalcommits@v7.0.2
            semantic-release-helm3
            @semantic-release/changelog
            @semantic-release/git
            @semantic-release/exec@6.0.3
        env:
          GITHUB_TOKEN: ${{ steps.app-token.outputs.token }}
          GIT_AUTHOR_NAME: ${{ secrets.LERIAN_CI_CD_USER_NAME }}
          GIT_AUTHOR_EMAIL: ${{ secrets.LERIAN_CI_CD_USER_EMAIL }}
          GIT_COMMITTER_NAME: ${{ secrets.LERIAN_CI_CD_USER_NAME }}
          GIT_COMMITTER_EMAIL: ${{ secrets.LERIAN_CI_CD_USER_EMAIL }}

      - name: Publish Release in Plugin Lifecycle Management
        uses: LerianStudio/github-actions-lifecycle-management@main
        with:
          chart_name: "${{ matrix.chart.name }}"
          application_ids: ${{ vars.APPLICATION_IDS }}
          lifecycle_api_token: ${{ secrets.LIFECYCLE_API_TOKEN }}

  generate_changelog:
    name: üìù Generate AI-powered Changelog
    runs-on: ubuntu-22.04
    needs: release-helm-chart
    steps:
      - uses: actions/create-github-app-token@v1
        id: app-token
        with:
          app-id: ${{ secrets.LERIAN_STUDIO_MIDAZ_PUSH_BOT_APP_ID }}
          private-key: ${{ secrets.LERIAN_STUDIO_MIDAZ_PUSH_BOT_PRIVATE_KEY }}

      - uses: LerianStudio/github-actions-gptchangelog@chart
        with:
          CHECKOUT_DIR: ${{ matrix.chart.working_dir }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          GITHUB_TOKEN: ${{ steps.app-token.outputs.token }}
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          LERIAN_CI_CD_USER_GPG_KEY: ${{ secrets.LERIAN_CI_CD_USER_GPG_KEY }}
          LERIAN_CI_CD_USER_GPG_KEY_PASSWORD: ${{ secrets.LERIAN_CI_CD_USER_GPG_KEY_PASSWORD }}
          LERIAN_CI_CD_USER_NAME: ${{ secrets.LERIAN_CI_CD_USER_NAME }}
          LERIAN_CI_CD_USER_EMAIL: ${{ secrets.LERIAN_CI_CD_USER_EMAIL }}
          LERIAN_STUDIO_MIDAZ_PUSH_BOT_APP_ID: ${{ secrets.LERIAN_STUDIO_MIDAZ_PUSH_BOT_APP_ID }}
          LERIAN_STUDIO_MIDAZ_PUSH_BOT_PRIVATE_KEY: ${{ secrets.LERIAN_STUDIO_MIDAZ_PUSH_BOT_PRIVATE_KEY }}

