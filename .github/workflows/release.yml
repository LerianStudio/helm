name: Helm Release

on:
  push:
    branches:
      - main
      - develop
      - feat/HELM-94
    paths-ignore:
      - 'README.md'
      - '.github/workflows/**'
      - '.github/configs/**'
      - '.gitignore'

jobs:
  get-changed-paths:
    name: Get Changed Paths
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.changed-paths.outputs.matrix }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 1

      - name: Get changed paths
        id: changed-paths
        uses: LerianStudio/github-actions-changed-paths@main
        with:
          filter_paths: charts/
          get_app_name: true
          path_level: 2
    
  release-helm-chart:
    needs: get-changed-paths
    name: Release Helm Chart
    if: needs.get-changed-paths.outputs.matrix != '[]'
    runs-on: ubuntu-latest
    strategy:
      matrix:
        path: ${{ fromJson(needs.get-changed-paths.outputs.matrix) }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 1

      - name: Set up Helm
        uses: azure/setup-helm@v3

      - name: Helm Lint
        run: helm lint ${{ matrix.path }}

      - name: Run helm unittest
        id: unittest
        run: |
          helm plugin install https://github.com/helm-unittest/helm-unittest.git
          helm unittest ${{ matrix.p }}
      
      - name: Helm Dependency Update
        run: helm dependency update ${{ matrix.path }}

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Generate GitHub App Token
        id: app-token
        uses: actions/create-github-app-token@v1
        with:
          app-id: ${{ secrets.LERIAN_STUDIO_MIDAZ_PUSH_BOT_APP_ID }}
          private-key: ${{ secrets.LERIAN_STUDIO_MIDAZ_PUSH_BOT_PRIVATE_KEY }}

      - name: Generate .releaserc file
        run: |
          CHART_NAME=$(basename ${{ matrix.path }}) 
          CHART_PATH="${{ matrix.path }}"            
      
          jq \
            --arg chartPath "$CHART_PATH" \
            --arg tagFormat "$CHART_NAME-v\${version}" \
            '.plugins[2][1].chartPath = $chartPath |
              .plugins[4][1].assets[1] = ($chartPath + "/Chart.yaml") |
              .tagFormat = $tagFormat' \
            .releaserc.json > .releaserc.$CHART_NAME.json

      - name: Semantic Release
        uses: cycjimmy/semantic-release-action@v4
        id: semantic_changelog
        with:
          ci: false
          semantic_version: 23.0.8
          extends: .releaserc.$(basename ${{ matrix.path }}.json
          extra_plugins: |
            conventional-changelog-conventionalcommits@v7.0.2
            semantic-release-helm3z`
            @semantic-release/changelog
            @semantic-release/git
        env:
          GITHUB_TOKEN: ${{ steps.app-token.outputs.token }}
          GIT_AUTHOR_NAME: ${{ secrets.LERIAN_CI_CD_USER_NAME }}
          GIT_AUTHOR_EMAIL: ${{ secrets.LERIAN_CI_CD_USER_EMAIL }}
          GIT_COMMITTER_NAME: ${{ secrets.LERIAN_CI_CD_USER_NAME }}
          GIT_COMMITTER_EMAIL: ${{ secrets.LERIAN_CI_CD_USER_EMAIL }}


