# Default values for midaz components.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.
nameOverride: "midaz"
fullnameOverride: ""
namespaceOverride: "midaz"

console:
  # -- Service name
  name: console

  # -- Number of replicas for the deployment
  replicaCount: 1

  image:
    # -- Repository for the console service container image
    repository: lerianstudio/midaz-console
    # -- Image pull policy
    pullPolicy: IfNotPresent
    # -- Image tag used for deployment
    tag: "1.11.0"

  # -- Secrets for pulling images from a private registry
  imagePullSecrets: []

  # -- Overrides the default generated name by Helm
  nameOverride: ""
  # -- Overrides the full name generated by Helm
  fullnameOverride: ""

  # -- Annotations to be added to the Pod
  podAnnotations: {}

  podSecurityContext: {}
  # fsGroup: 2000

  securityContext:
    # -- Defines the group ID for the user running the process inside the container
    runAsGroup: 1000
    # -- Defines the user ID for the process running inside the container
    runAsUser: 1000
    # -- Ensures the process does not run as root
    runAsNonRoot: true
    capabilities:
      drop:
        - ALL
    # -- Defines the root filesystem as read-only
    readOnlyRootFilesystem: true

  service:
    # -- Kubernetes service type
    type: ClusterIP
    # -- Service port
    port: 8081

  ingress:
    # -- Enable or disable ingress
    enabled: false
    # -- Ingress class name
    className: ""
    # -- Additional ingress annotations
    annotations: {}
    hosts:
      - host: ""
        paths:
          - path: /
            pathType: Prefix
    # -- TLS configuration for ingress
    tls: []
    #  - secretName: chart-example-tls
    #  hosts:
    #      - chart-example.local
      
  resources:
    # -- CPU and memory limits for pods
    limits:
      cpu: 200m
      memory: 256Mi
    # -- Minimum CPU and memory requests
    requests:
      cpu: 100m
      memory: 128Mi

  autoscaling:
    # -- Enable or disable horizontal pod autoscaling
    enabled: true
    # -- Minimum number of replicas
    minReplicas: 1
    # -- Maximum number of replicas
    maxReplicas: 3
    # -- Target CPU utilization percentage for autoscaling
    targetCPUUtilizationPercentage: 80
    targetMemoryUtilizationPercentage: 80

  # -- Node selector for scheduling pods on specific nodes
  nodeSelector: {}

   # -- Tolerations for scheduling on tainted nodes
  tolerations: {}

  # -- Affinity rules for pod scheduling
  affinity: {}
    # nodeAffinity:
    #   requiredDuringSchedulingIgnoredDuringExecution:
    #     nodeSelectorTerms:
    #     - matchExpressions:
    #       - key: midaz.io/owner
    #         operator: In
    #         values:
    #         - midaz

   # -- ConfigMap for environment variables and configurations
   # @default -- templates/console/configmap.yaml
  configmap:
    # -- URL of the NextAuth service
    NEXTAUTH_URL: "http://localhost:8081" # If a custom DNS is configured for the console, this value must be updated accordingly.

  # -- Secrets for storing sensitive data
  # @default -- templates/console/secrets.yaml
  secrets: {}

  serviceAccount:
    # -- Specifies whether a ServiceAccount should be created
    create: true
    # -- Annotations for the ServiceAccount
    annotations: {}
    # -- Name of the service account
    # @default -- `midaz-console.fullname`
    name: ""

onboarding:
  # -- Service name
  name: onboarding

  # -- Number of replicas for the onboarding service
  replicaCount: 2

  image:
    # -- Repository for the onboarding service container image
    repository: lerianstudio/midaz-onboarding
    # -- Image pull policy
    pullPolicy: IfNotPresent
    # -- Image tag used for deployment
    tag: "1.49.0"

  # -- Secrets for pulling images from a private registry
  imagePullSecrets: []

  # -- Overrides the default generated name by Helm
  nameOverride: ""
  # -- Overrides the full name generated by Helm
  fullnameOverride: ""

  # -- Pod annotations for additional metadata
  podAnnotations: {}

  podSecurityContext: {}
    # fsGroup: 2000

  securityContext:
    # -- Defines the group ID for the user running the process inside the container
    runAsGroup: 1000
    # -- Defines the user ID for the process running inside the container
    runAsUser: 1000
    # -- Ensures the process does not run as root
    runAsNonRoot: true
    capabilities:
      drop:
        - ALL
    # -- Defines the root filesystem as read-only
    readOnlyRootFilesystem: true

  service:
    # -- Kubernetes service type
    type: ClusterIP
    # -- Port for the HTTP API
    port: 3000

  ingress:
    # -- Enable or disable ingress
    enabled: false
    # -- Ingress class name
    className: ""
    # -- Additional ingress annotations
    annotations: {}
    hosts:
      - host: ""
        paths:
          - path: /
            pathType: Prefix
    # -- TLS configuration for ingress
    tls: []
    #  - secretName: chart-example-tls
    #  hosts:
    #      - chart-example.local

  resources:
    # -- CPU and memory limits for pods
    limits:
      cpu: 200m
      memory: 256Mi
    # -- Minimum CPU and memory requests
    requests:
      cpu: 100m
      memory: 128Mi

  autoscaling:
    # -- Enable or disable horizontal pod autoscaling
    enabled: true
    # -- Minimum number of replicas
    minReplicas: 2
    # -- Maximum number of replicas
    maxReplicas: 5
    # -- Target CPU utilization percentage for autoscaling
    targetCPUUtilizationPercentage: 80
    targetMemoryUtilizationPercentage: 80

  # -- Node selector for scheduling pods on specific nodes
  nodeSelector: {}

  # -- Tolerations for scheduling on tainted nodes
  tolerations: {}

  # -- Affinity rules for pod scheduling
  affinity: {}
    # -- Node affinity rules
    # nodeAffinity:
    #   requiredDuringSchedulingIgnoredDuringExecution:
    #     nodeSelectorTerms:
    #     - matchExpressions:
    #       - key: midaz.io/owner
    #         operator: In
    #         values:
    #         - midaz

  # -- ConfigMap for environment variables and configurations
  # @default -- templates/onboarding/configmap.yaml
  configmap: {}

  # -- Secrets for storing sensitive data
  # @default -- templates/onboarding/secrets.yaml
  secrets: {}

  serviceAccount:
    # -- Specifies whether a ServiceAccount should be created
    create: true
    # -- Annotations for the ServiceAccount
    annotations: {}
    # -- Name of the service account
    # @default -- `midaz-onboarding.fullname`
    name: ""

audit:
  # -- Service name
  name: audit

  # -- Number of replicas for the audit service
  replicaCount: 1

  image:
    # -- Repository for the audit service container image
    repository: lerianstudio/midaz-audit
    # -- Image pull policy
    pullPolicy: IfNotPresent
    # -- Image tag used for deployment
    tag: "1.48.0"

  # -- Secrets for pulling images from a private registry
  imagePullSecrets: []

  # -- Overrides the default generated name by Helm
  nameOverride: ""
  # -- Overrides the full name generated by Helm
  fullnameOverride: ""

  # -- Pod annotations for additional metadata
  podAnnotations: {}

  podSecurityContext: {}
    # fsGroup: 2000

  securityContext:
    # -- Defines the group ID for the user running the process inside the container
    runAsGroup: 1000
    # -- Defines the user ID for the process running inside the container
    runAsUser: 1000
    # -- Ensures the process does not run as root
    runAsNonRoot: true
    capabilities:
      drop:
        - ALL
    # -- Defines the root filesystem as read-only
    readOnlyRootFilesystem: true

  service:
    # -- Kubernetes service type
    type: ClusterIP
    # -- Port for the HTTP API
    port: 3002

  ingress:
    # -- Enable or disable ingress
    enabled: false
    # -- Ingress class name
    className: ""
    # -- Additional ingress annotations
    annotations: {}
    hosts:
      - host: ""
        paths:
          - path: /
            pathType: Prefix
    # -- TLS configuration for ingress
    tls: []
    #  - secretName: chart-example-tls
    #    hosts:
    #      - chart-example.local

  resources:
    # -- CPU and memory limits for pods
    limits:
      cpu: 200m
      memory: 256Mi
    # -- Minimum CPU and memory requests
    requests:
      cpu: 100m
      memory: 128Mi

  # The following container are deployed as sidecar to support auditability.
  # They are required for the audit service.
  # For more details, refer to the documentation:
  # https://docs.lerian.studio/docs/auditability#lerians-approach-to-auditability
  server:
    image:
      # -- Repository for the Trillian log server container image
      repository: gcr.io/trillian-opensource-ci/log_server
    service:
      # -- HTTP port for the Trillian log server
      httpPort: 8091
      # -- gRPC port for the Trillian log server
      grpcPort: 8090
    resources:
      # -- CPU and memory limits for pods
      limits:
        cpu: 200m
        memory: 256Mi
      # -- Minimum CPU and memory requests
      requests:
        cpu: 100m
        memory: 128Mi

  # The following container are deployed as sidecar to support auditability.
  # They are required for the audit service.
  # For more details, refer to the documentation:
  # https://docs.lerian.studio/docs/auditability#lerians-approach-to-auditability
  signer:
    image:
      # -- Repository for the Trillian log signer container image
      repository: gcr.io/trillian-opensource-ci/log_signer
    service:
      # -- HTTP port for the Trillian log signer
      httpPort: 8092
      # -- gRPC port for the Trillian log signer
      grpcPort: 8093
    resources:
      # -- CPU and memory limits for pods
      limits:
        cpu: 200m
        memory: 256Mi
      # -- Minimum CPU and memory requests
      requests:
        cpu: 100m
        memory: 128Mi

  autoscaling:
    # -- Enable or disable horizontal pod autoscaling
    enabled: true
    # -- Minimum number of replicas
    minReplicas: 1
    # -- Maximum number of replicas
    maxReplicas: 3
    # -- Target CPU utilization percentage for autoscaling
    targetCPUUtilizationPercentage: 80
    targetMemoryUtilizationPercentage: 80

  # -- Node selector for scheduling pods on specific nodes
  nodeSelector: {}

  # -- Tolerations for scheduling on tainted nodes
  tolerations: {}

  # -- Affinity rules for pod scheduling
  affinity: {}
    # -- Node affinity rules
    # nodeAffinity:
    #   requiredDuringSchedulingIgnoredDuringExecution:
    #     nodeSelectorTerms:
    #     - matchExpressions:
    #       - key: midaz.io/owner
    #         operator: In
    #         values:
    #         - midaz

  # -- ConfigMap for environment variables and configurations
  # @default -- templates/audit/configmap.yaml
  configmap: {}

  # -- Secrets for storing sensitive data
  # @default -- templates/audit/secrets.yaml
  secrets: {}

  serviceAccount:
    # -- Specifies whether a service account should be created
    create: true
    # -- Annotations for the ServiceAccount
    annotations: {}
    # -- Name of the service account
    # @default -- `midaz-audit.fullname`
    name: ""

transaction:
  # -- Service name
  name: transaction

  # -- Number of replicas for the transaction service
  replicaCount: 1

  image:
    # -- Repository for the transaction service container image
    repository: lerianstudio/midaz-transaction
    # -- Image pull policy
    pullPolicy: IfNotPresent
    # -- Image tag used for deployment
    tag: "1.48.0"

  # -- Secrets for pulling images from a private registry
  imagePullSecrets: []

  # -- Overrides the default generated name by Helm
  nameOverride: ""
  # -- Overrides the full name generated by Helm
  fullnameOverride: ""

  # -- Pod annotations for additional metadata
  podAnnotations: {}

  podSecurityContext: {}
  # fsGroup: 2000

  securityContext:
    # -- Defines the group ID for the user running the process inside the container
    runAsGroup: 1000
    # -- Defines the user ID for the process running inside the container
    runAsUser: 1000
    # -- Ensures the process does not run as root
    runAsNonRoot: true
    capabilities:
      drop:
        - ALL
    # -- Defines the root filesystem as read-only
    readOnlyRootFilesystem: true

  service:
    # -- Kubernetes service type
    type: ClusterIP
    # -- Port for the HTTP API
    port: 3001

  ingress:
    # -- Enable or disable ingress
    enabled: false
    # -- Ingress class name
    className: ""
    # -- Additional ingress annotations
    annotations: {}
    hosts:
      - host: ""
        paths:
          - path: /
            pathType: Prefix
    # -- TLS configuration for ingress
    tls: []
    #  - secretName: chart-example-tls
    #  hosts:
    #      - chart-example.local

  resources:
    # -- CPU and memory limits for pods
    limits:
      cpu: 200m
      memory: 256Mi
    # -- Minimum CPU and memory requests
    requests:
      cpu: 100m
      memory: 128Mi

  autoscaling:
    # -- Enable or disable horizontal pod autoscaling
    enabled: true
    # -- Minimum number of replicas
    minReplicas: 3
    # -- Maximum number of replicas
    maxReplicas: 9
    # -- Target CPU utilization percentage for autoscaling
    targetCPUUtilizationPercentage: 70
    targetMemoryUtilizationPercentage: 80

  # -- Node selector for scheduling pods on specific nodes
  nodeSelector: {}

  # -- Tolerations for scheduling on tainted nodes
  tolerations: {}

  # -- Affinity rules for pod scheduling
  affinity: {}
    # -- Node affinity rules
    # nodeAffinity:
    #   requiredDuringSchedulingIgnoredDuringExecution:
    #     nodeSelectorTerms:
    #     - matchExpressions:
    #       - key: midaz.io/owner
    #         operator: In
    #         values:
    #         - midaz

  # -- ConfigMap for environment variables and configurations
  # @default -- templates/transaction/configmap.yaml
  configmap: {}

  # -- Secrets for storing sensitive data
  # @default -- templates/transaction/secrets.yaml
  secrets: {}

  serviceAccount:
    # -- Specifies whether a ServiceAccount should be created
    create: true
    # -- Annotations for the ServiceAccount
    annotations: {}
    # -- Name of the service account
    # @default -- `midaz-transaction.fullname`
    name: ""

grafana:
  # OpenTelemetry (OTel) dependency for observability.
  # This component is responsible for collecting and exporting telemetry data
  # such as traces and metrics, enhancing the monitoring of the application.
  # For more details, refer to the documentation:
  # https://docs.lerian.studio/docs/observability-in-midaz#midaz-observability-stack
  enabled: false

  name: grafana

  # -- Configure the ingress for Access Grafana Dashboard
  ingress:
    enabled: false
    className: ""
    annotations: {}
    hosts:
      - host: ""
        paths:
          - path: /
            pathType: Prefix
    tls: []
    #  - secretName: chart-example-tls
    #  hosts:
    #      - chart-example.local
  
redis:
  # Redis is used to handle scenarios where real-time performance and fast data retrieval are essential.
  # This component is responsible for providing an in-memory data store
  # For more details, refer to the documentation:
  # https://docs.lerian.studio/docs/midaz-components#why-redis
  enabled: true

  external: false
  architecture: standalone
  auth:
    enabled: false
  master:
    persistence:
      size: 8Gi

postgresql:
  # PostgreSQL is the backbone of Midaz for managing structured data that demands transactional reliability and consistency.
  # This component is responsible for providing a robust relational database
  # For more details, refer to the documentation:
  # https://docs.lerian.studio/docs/midaz-components#why-postgresql
  enabled: true

  external: false
  architecture: replication
  replication:
    numSynchronousReplicas: 1
  auth:
    enabled: true
    enablePostgresUser: false
    username: "midaz"
    password: "lerian"
    database: "onboarding"
    replicationUsername: "replicator"
    replicationPassword: "replicator_password"

  primary:
    extraVolumes:
    - name: init-script
      configMap:
        name: midaz-init-sql
        items:
          - key: init.sql
            path: init.sql
    extraVolumeMounts:
    - name: init-script
      mountPath: /docker-entrypoint-initdb.d/init.sql
      subPath: init.sql
    
    persistence:
      size: 8Gi
  
  readReplicas:
    name: replication
    replicaCount: 1
    persistence:
      size: 8Gi

mongodb:
  # MongoDB’s flexibility and scalability make it the perfect choice for managing evolving and less structured data.
  # For more details, refer to the documentation:
  # https://docs.lerian.studio/docs/midaz-components#why-mongodb
  enabled: true

  external: false
  auth:
    enabled: true
    rootUser: midaz
    rootPassword: "lerian"
  persistence:
    size: 8Gi

rabbitmq:
  # RabbitMQ dependency for message brokering.
  # This component is responsible for providing a message queue system
  # to enable communication between different parts of the application.
  enabled: true

  external: false
  image:
    debug: true
  auth:
    enabled: true
    username: "midaz"
    password: "lerian"
  loadDefinition:
    enabled: true
    existingSecret: load-definition
  extraConfiguration: |
    load_definitions = /app/load_definition.json
  
  persistence:
    size: 8Gi
  
casdoor:
  # Casdoor is an open-source identity and access management solution.
  # Midaz’s security model leverages Casdoor and Casbin for identity management and authorization.
  # For more details, refer to the documentation:
  # https://docs.lerian.studio/docs/midaz-security#identity-management-with-casdoor
  enabled: true

  config: |
    appname=midaz-casdoor
    rundmode=dev
    httpport=8000
    SessionOn=true
    copyrequestbody= true
    driverName= {{ .Values.database.driver }}
    dataSourceName= {{ include "casdoor.dataSourceName" . }}
    dbName=casdoor
    showSql=false
    authState="casdoor"
    verificationCodeTimeout=10
    logPostOnly=true
    isUsernameLowered=false
    batchSize=100
    enableErrorMask=false
    enableGzip=true
    quota={"organization": -1, "user": -1, "application": -1, "provider": -1}
    logConfig={"filename": "logs/casdoor.log", "maxdays":99999, "perm":"0770"}
    initDataFile="./init_data.json"
    isCloudIntranet=false
    initScore=0
    ldapServerPort=10389

  database:
    driver: postgres
    user: midaz
    password: lerian
    host: midaz-casdoordb.midaz.svc.cluster.local
    port: 5432
    databasename: casdoor
    sslMode: disable

  initContainersEnabled: true
  initContainers: |
    - name: wait-for-dependencies
      image: busybox
      env:
        - name: DB_HOST
          value: "{{ .Values.database.host }}"
        - name: DB_PORT
          value: "{{ .Values.database.port }}"
      command:
        - /bin/sh
        - -c
        - >
          echo "Checking $DB_HOST:$DB_PORT...";
          while ! nc -z $DB_HOST $DB_PORT; do
            echo "$DB_HOST:$DB_PORT is not ready yet, waiting...";
            sleep 5;
          done;
          echo "$DB_HOST:$DB_PORT is ready!";
    
  resources: 
    limits:
      cpu: 256m
      memory: 1Gi
    requests:
      cpu: 100m
      memory: 1Gi 

  extraVolumeMounts:
    - name: casdoor-init-data-volume
      mountPath: /init_data.json
      subPath: init_data.json

  extraVolumes:
    - name: casdoor-init-data-volume
      configMap:
        defaultMode: 420
        name: casdoor-init-config
        items:
          - key: init_data.json
            path: init_data.json
  
  ingress:
    enabled: false
    className: "alb"
    annotations: {}
    hosts:
      - host: 
        paths:
          - path: /
            pathType: Prefix

casdoordb:
  # Casdoor database dependency for identity and access management.
  # For more details, refer to the documentation:
  # https://docs.lerian.studio/docs/midaz-security#identity-management-with-casdoor
  enabled: true

  external: false
  auth:
    enabled: true
    enablePostgresUser: false
    username: "midaz"
    password: "lerian"
    database: "casdoor"
  primary:
    extraVolumes:
    - name: init-script-volume
      configMap:
        name: casdoor-init-script
        items:
          - key: 00_init.sql
            path: 00_init.sql
    extraVolumeMounts:
    - name: init-script-volume
      mountPath: /docker-entrypoint-initdb.d/00_init.sql
      subPath: 00_init.sql
    
    persistence:
      size: 8Gi

mariadb:
  # MariaDB dependency for audit solution.
  # For more details, refer to the documentation:
  # https://docs.lerian.studio/docs/auditability#lerians-approach-to-auditability
  enabled: true

  auth:
    enabled: true
    username: midaz
    rootPassword: "lerian"
    password: "lerian"
    database: "audit-db"
  primary:
    extraVolumes:
    - name: init-sql-volume
      configMap:
        name: mariadb-init-sql
        items:
          - key: init.sql
            path: init.sql
    extraVolumeMounts:
    - name: init-sql-volume
      mountPath: /docker-entrypoint-initdb.d/init.sql
      subPath: init.sql

    persistence:
      size: 8Gi